Ready Team One
- Gabriel White-Vega (gpwv3@gatech.edu)
- Lawrence Yim (lyim7@gatech.edu)
- Yipen Xue (yxue63@gatech.edu)
- Jonathan Bryan (jbryan63@gatech.edu)
- Ender Schmidt (eschmidt37@gatech.edu)

Start scene:
- Scenes/StartMenu

How to play:
- Navigate through the platforms to collect all the relics (gems) in the game
- Move with WASD, block with Right Click, swing sword with Left Click
- Some platforms have enemies, avoid or strike them with sword
- After collecting all relics in first section, press Spacebar to jump
- There is a hidden room in the first section, kill the skeletons to acquire the key
- After collecting all relics in second section, hold Shift to sprint
- There is an extra health that you can collect if you collect the key, which lets you move a platform
- Defeat the boss at the end of the level and collect the dropped gem to beat the game

Technology requirements:
- Game feel
  - Notice how the player is in 3p and has mostly smooth animations and interactive sound effects
  - The player has interesting choices:
    - How to time their movements
    - Choosing whether to collect a key from the skeletons and unlock the first locked door
    - Choosing whether to collect the second key and control the moving platform to collect the extra heart
    - Going left or right first during the Run Relics section
    - Whether to chase the boss down or defeat the spawned minions first, when the boss is in fleeing mode
- Environment
  - Notice how the environment is scripted to move in a compelling way, such as moving and swinging obstacles
  - The environment acknowledges the player, such as how moving toward the locked room or lever displays a message, and when unlocked, moves in response
  - The moving obstacles emit sounds, improving immersion
- AI
  - Observe the state transitions for skeletons between blocking and attacking
  - Observe the behavior of the boss, how it transitions between various animation and behavior states, chasing, short range attack, long range attack, and when in low health, it changes mode to fleeing and spawning minions
  - When running away, notice the boss's path, changing in real time in response, never getting stuck in a corner
  - Lava Orbs emit sounds when doing damage, providing feedback
  - The boss makes different sounds for different attacks, providing feedback

Known issues:
- Standing on a rotating obstacle won't cause the player to move along the rotating surface
- Animations between "left" and "right" for the player aren't very smooth, rather instantaneous
- If killed by the fire orbs, the orbs don't stop attacking even afte the player dies
- Sword sound effect will play when in the death menu and hitting restart
- Pausing the game while the scene is fading in will result in an unclickable menu
- Jumping during a sprint does not conserve initial momentum
- Destroying an orb does not always play the orb destruction sound

Manifest:
- Ender Schmidt:
  - Contribution summary:
    - Designed and implemented the main level layout, main level enemy locations and obstacles, plus associated scripts and sounds.
      - Created majority of object assets in LevelOneScene except for paths leading to extra hearts and falling platforms after the last sprint relic.
      - Created rotating cylinder, floating platform and swinging pendulum obstacles.
      - Determined relic location.
    - Ensured player health and relic counts carried over between scenes.
    - Main designer of skeleton enemies and projectile, including scripts, sounds and animator controllers.
    - Created the credits scene and associated scripts.
    - Created scripts to load scenes.
  - Imports from other creators:
    - Adding in "swoosh-1.wav" in Sounds/swoosh (pre-existing sound effect by lesaucisson)
    - Adding in "Power Loss.wav" in Sounds/Power Loss (Platform Stop) (pre-existing sound effect by LorenzoTheGreat)
    - Adding in "rpgPowerup.wav" in Sounds/rpgPowerup (Platform Start) (pre-existing sound effect by colorsCrimsonTears)
    - Adding in "10_Turn.wav" in Sounds/10_Turn (cylinderturn) (pre-existing sound effect by 14GPanskaZackovaM)
    - Adding in "Falling Bones.wav" in Sounds/falling-bones (pre-existing sound effect by spookymodem)
    - Adding in "10835 big fire loop.wav" in Sounds/fireball (pre-existing sound effect by Robinhood76)
    - Adding in SkeletonWarrior in Models/SkeletonWarrior (pre-existing prefab by AlexN)
  - Files:
    - Animations/ChainSwing.anim
    - Animations/FloatingPlatform.anim
    - Animations/FloatingPlatformHeight.anim
    - Animations/FloatingPlatformHeightTwo.anim
    - Animations/RotatingObstruction.anim
    - AnimatorControllers/Cube.controller
    - AnimatorControllers/FloatingPlatform.controller
    - AnimatorControllers/FloatingPlatformHeight.controller
    - AnimatorControllers/ParentChain.controller
    - AnimatorControllers/RotatingObstruction.controller
    - AnimatorControllers/SkeletonWarrior.controller
    - AnimatorControllers/SkeletonWarriorProjectile.controller
    - Materials/Shadow.mat
    - Prefabs/FallingPlatform.prefab
    - Prefabs/FloatingParent.prefab
    - Prefabs/FloatingPlatformHeight.prefab
    - Prefabs/FloatingPlatformHeightFast.prefab
    - Prefabs/Pendulum.prefab
    - Prefabs/Player.prefab
    - Prefabs/Projectile.prefab
    - Prefabs/SkeletonWarrior.prefab
    - Prefabs/SkeletonWarriorNoWeapon.prefab
    - Scenes/CharacterDevelopment.unity
    - Scenes/CreditsMenu.unity
    - Scenes/LevelOneScene.unity
    - Scenes/StartMenu.unity
    - Scripts/AI/Projectile.cs
    - Scripts/AI/SkeletonAI.cs
    - Scripts/AI/SkeletonProjectileAI.cs
    - Scripts/Combat/Targetable.cs
    - Scripts/Combat/WeaponController.cs
    - Scripts/Editor/GatherCredits.cs
    - Scripts/Events/AudioEventManager.cs
    - Scripts/Events/CylinderMoveEvent.cs
    - Scripts/Events/FireballThrowEvent.cs
    - Scripts/Events/FireballWallEvent.cs
    - Scripts/Events/PlatformStartEvent.cs
    - Scripts/Events/PlatformStopEvent.cs
    - Scripts/Events/SkeletonDeathEvent1.cs
    - Scripts/Events/SwooshEvent.cs
    - Scripts/Menu/LoadMenu.cs
    - Scripts/Menu/LoseMenu.cs
    - Scripts/Menu/VictoryMenu.cs
    - Scripts/SceneManager/LoadBoss.cs
    - Scripts/SceneManager/LoadCredits.cs
    - Scripts/Walkways/FloorController.cs
    - Scripts/FireballDissipateEvent.cs
    - Scripts/LethalHazardEvent.cs (unused)
    - Scripts/PlayerController.cs
    - Scripts/SkeletonDeathAudioHandler.cs
    - Scripts/SkeletonSwordTrigger.cs
    - FloatingPlatform.controller
    - GatherCredits.cs

- Jonathan Bryan:
  - Contribution summary:
    - Designed and implemented the player's full functionality
      - Animation configs
      - Animation and behavior controllers and state machines
      - Scripts
  - Files:
    - Assets/Character/Input System/PlayerInputActions.cs
    - Assets/Character/Input System/PlayerInputActions.inputactions
    - Assets/Character/Paladin/Masks/*
    - Assets/Character/Paladin/animation_controllers_PaladinCharacterController.controller
    - Assets/Prefabs/Player.prefab
    - Assets/Scripts/CursorController
    - Assets/Scripts/PlayerController.cs
    - Assets/Scripts/TurnController.cs
    - Assets/Scripts/Utils/AnimationControllerScripts/FallDetection.cs
    - Assets/FallAudioHandler.cs
    - Assets/DefeatAudioHandler.cs
    - Assets/DeathDetection.cs

- Gabriel White-Vega:
  - Contributions summary:
    - Alpha:
      - Designed and implemented the Orb and Boss AI's functionality
        - Animation configs
        - Animation and behavior controllers and state machines
        - Scripts
      - Designed and implemented the boss scene
    - Post-Alpha:
      - Rewrote AI behavior to use Behavior Trees
      - "Extra Health" relics and mechanisms
      - Extra locked room and the mechanisms for unlocking it
      - Movable platform for reaching the second extra health relic
      - Each relic being made into a checkpoint, and appropriate saving operations
      - Inventory system for tracking extra health and keys
  - Files:
    - Scripts/TextureAutoResize.cs
    - Scripts/Combat/Targetable.cs
    - Scripts/Combat/WeaponController.cs
    - Scripts/AI/AIAudioHandler.cs
    - Scripts/AI/BossAI.cs
    - Scripts/AI/OrbAI.csp
    - Scripts/AI/SkeletonProjectileAI.cs
    - Scripts/AI/RadialDamageController.cs
    - Scripts/AI/ShortRangeAttackDetection.cs
    - Scripts/Collectables/HeartController.cs
    - Scripts/Collectables/KeyController.cs
    - Scripts/Collectables/RelicManager.cs
    - Scripts/ScenesManagement/SceneLoader.cs
    - Scripts/SceneManagement/SceneName.cs
    - Scripts/SceneManagement/TutorialStarter.cs
    - Scripts/StateManagement/PlayerInventory.cs
    - Scripts/Walkways/ControlledMovingPlatform.cs
    - Scripts/PanelController.cs
    - Scripts/OneUpTimer.cs
    - Scripts/LockedDoorController.cs
    - Scripts/ICheckpoint.cs
    - Scenes/LevelOneBossScene.unity
    - Scenes/LevelOneScene.unity
    - Scenes/TutorialScene.unity
    - Prefabs/Enemy Orb.prefab
    - Prefabs/FloatingOrbSentryLocation.prefab
    - Prefabs/LevelOneBoss.prefab
    - Prefabs/RadialDamageEmitter.prefab
    - AnimatorControllers/BossController.controller
    - AnimatorControllers/OrbController.controller
    - Animations/Orb Hover.anim

- Yipeng Xue
  - Contributions summary: 
    - Implement the collapsing floor section of the game
    - Implement relics collectibles
    - Implement relics collection score box 
    - Implement relics count data persistense
    - Refine restart in pause menu
    - Implement collect sound
    - Implement scene fade in effect
  - Files: 
    - Scripts/Collectables/CollectableController.cs
    - Scripts/Collectables/RelicManager.cs
    - Scripts/Collectables/RelicsCountManager.cs
    - Scripts/PlayerStat.cs
    - Scripts/PlayerController.cs
    - Prefabs/FallingPlatform.prefab
    - Prefabs/FixedPlatform.prefab
    - Sounds/collect.wav
    - Prefabs/Gem
    - Scenes/LevelOneScene.unity
    - Animations/Fade_In.anim
    - AnimatorControllers/Fade_In.controller\

- Lawrence Yim
  - Contributions summary:
    - Implement respawn and reset mechanisms and refine associated data persistence
    - Implement the win/lose and pause menus
    - Implement the health tracking system and displays
  - Files:
    - Collectables/Gem/Prefabs/JumpRelic.prefab
    - Collectables/Gem/Prefabs/RunRelics.prefab
    - Prefabs/Wall.prefab
    - Prefabs/Stairs.prefab
    - Scenes/LevelOneBossScene
    - Scenes/LevelOneScene
    - Scripts/Collectables/RelicManager.cs
    - Scripts/HealthUI.cs
    - Scripts/LoseMenu.cs
    - Scripts/PlayerHealth.cs
    - Scripts/ResetEvent.cs
    - Scripts/RespawnPlayer.cs
