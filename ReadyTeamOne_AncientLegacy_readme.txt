Ready Team One
- Gabriel White-Vega (gpwv3@gatech.edu)
- Lawrence Yim (lyim7@gatech.edu)
- Yipen Xue (yxue63@gatech.edu)
- Jonathan Bryan (jbryan63@gatech.edu)
- Ender Schmidt (eschmidt37@gatech.edu)

Start scene:
- Scenes/StartMenu

How to play:
- Navigate through the platforms to collect all the relics (gems) in the game
- Move with WASD, block with Right Click, swing sword with Left Click
- Some platforms have enemies, avoid or strike them with sword
- After collecting all relics in first section, press Spacebar to jump
- There is a hidden room in the first section, kill the skeletons to acquire the key
- After collecting all relics in second section, hold Shift to sprint
- There is an extra health that you can collect if you collect the key, which lets you move a platform
- Defeat the boss at the end of the level and collect the dropped gem to beat the game

Technology requirements:
- Game feel
  - Notice how the player is in 3p and has mostly smooth animations and interactive sound effects
  - The player has interesting choices:
    - How to time their movements
    - Choosing whether to collect a key from the skeletons and unlock the first locked door
    - Choosing whether to collect the second key and control the moving platform to collect the extra heart
    - Going left or right first during the Run Relics section
    - Whether to chase the boss down or defeat the spawned minions first, when the boss is in fleeing mode
- Environment
  - Notice how the environment is scripted to move in a compelling way, such as moving and swinging obstacles
  - The environment acknowledges the player, such as how moving toward the locked room or lever displays a message, and when unlocked, moves in response
  - The moving obstacles emit sounds, improving immersion
- AI
  - Observe the state transitions for skeletons between blocking and attacking
  - Observe the behavior of the boss, how it transitions between various animation and behavior states, chasing, short range attack, long range attack, and when in low health, it changes mode to fleeing and spawning minions
  - When running away, notice the boss's path, changing in real time in response, never getting stuck in a corner
  - Lava Orbs emit sounds when doing damage, providing feedback
  - The boss makes different sounds for different attacks, providing feedback

Known issues:
- Standing on a rotating obstacle won't cause the player to move along the rotating surface
- Animations between "left" and "right" for the player aren't very smooth, rather instantaneous
- If killed by the fire orbs, the orbs don't stop attacking even afte the player dies
- Sword sound effect will play when in the death menu and hitting restart
- Pausing the game while the scene is fading in will result in an unclickable menu
- Jumping during a sprint does not conserve initial momentum
- Destroying an orb does not always play the orb destruction sound

Manifest:
- Ender Schmidt:
  - Contribution summary:
    - Designed and implemented the main level layout and obstacles and associated scripts
    - Created the credits scene and associated script
  - Imports from other creators:
    - Adding in "swoosh-1.wav" (pre-existing sound effect by lesaucisson)
    - Adding in "Power Loss.wav" (pre-existing sound effect by LorenzoTheGreat)
    - Adding in "rpgPowerup.wav" (pre-existing sound effect by colorsCrimsonTears)
    - Adding in "10_Turn.wav" (pre-existing sound effect by 14GPanskaZackovaM)
  - Files:
    - Scripts for calling the above sounds, including PlatformStartEvent, PlatformStopEvent, SwooshEvent, and CylinderMoveEvent
    - Edits to AudioEventManager script to add these sound effects
    - Edit to targetable script (added in second initializing parameter for max health) and all dependent scripts to incorporate this change
    - Edited PlayerController script to make relic collection variables and player health static, which makes values carry over between levels
    - Edits to FloorController script
    - All of GatherCredits script
    - All of LoadCredits script
    - All of LoadMenu script
    - All of LoadBoss script
    - All of LethalHazardEvent script (unused)
    - Edit to VictoryMenu and LoseMenu scripts to reset player health when resetting the game
    - Chain Swing animation
    - All three FloatingPlatform animations
    - Rotating Obstruction animation
    - All FloatingPlatform animation controllers
    - All three FloatingPlatform Prefabs
    - Pendulum Prefab
    - Construction of Credits Scene
    - The objects under EntrancePortion and all prefabs of SecondWalkway in the level scene, except for enemies and relics.
    - Shadow Pit below the level (Cube object)
    - Edits to falling platform prefab, added in invisible trigger for platforms.

- Jonathan Bryan:
  - Contribution summary:
    - Designed and implemented the player's full functionality
      - Animation configs
      - Animation and behavior controllers and state machines
      - Scripts
  - Files:
    - Assets/Character/Input System/PlayerInputActions.cs
    - Assets/Character/Input System/PlayerInputActions.inputactions
    - Assets/Character/Paladin/Masks/*
    - Assets/Character/Paladin/animation_controllers_PaladinCharacterController.controller
    - Assets/Prefabs/Player.prefab
    - Assets/Scripts/CursorController
    - Assets/Scripts/PlayerController.cs
    - Assets/Scripts/TurnController.cs
    - Assets/Scripts/Utils/AnimationControllerScripts/FallDetection.cs
    - Assets/FallAudioHandler.cs
    - Assets/DefeatAudioHandler.cs
    - Assets/DeathDetection.cs

- Gabriel White-Vega:
  - Contributions summary:
    - Alpha:
      - Designed and implemented the Orb and Boss AI's functionality
        - Animation configs
        - Animation and behavior controllers and state machines
        - Scripts
      - Designed and implemented the boss scene
    - Post-Alpha:
      - Rewrote AI behavior to use Behavior Trees
      - "Extra Health" relics and mechanisms
      - Extra locked room and the mechanisms for unlocking it
      - Movable platform for reaching the second extra health relic
      - Each relic being made into a checkpoint, and appropriate saving operations
      - Inventory system for tracking extra health and keys
  - Files:
    - Scripts/TextureAutoResize.cs
    - Scripts/Combat/Targetable.cs
    - Scripts/Combat/WeaponController.cs
    - Scripts/AI/AIAudioHandler.cs
    - Scripts/AI/BossAI.cs
    - Scripts/AI/OrbAI.csp
    - Scripts/AI/SkeletonProjectileAI.cs
    - Scripts/AI/RadialDamageController.cs
    - Scripts/AI/ShortRangeAttackDetection.cs
    - Scripts/Collectables/HeartController.cs
    - Scripts/Collectables/KeyController.cs
    - Scripts/Collectables/RelicManager.cs
    - Scripts/ScenesManagement/SceneLoader.cs
    - Scripts/SceneManagement/SceneName.cs
    - Scripts/SceneManagement/TutorialStarter.cs
    - Scripts/StateManagement/PlayerInventory.cs
    - Scripts/Walkways/ControlledMovingPlatform.cs
    - Scripts/PanelController.cs
    - Scripts/OneUpTimer.cs
    - Scripts/LockedDoorController.cs
    - Scripts/ICheckpoint.cs
    - Scenes/LevelOneBossScene.unity
    - Scenes/LevelOneScene.unity
    - Scenes/TutorialScene.unity
    - Prefabs/Enemy Orb.prefab
    - Prefabs/FloatingOrbSentryLocation.prefab
    - Prefabs/LevelOneBoss.prefab
    - Prefabs/RadialDamageEmitter.prefab
    - AnimatorControllers/BossController.controller
    - AnimatorControllers/OrbController.controller
    - Animations/Orb Hover.anim

- Yipeng Xue
  - Contributions summary: 
    - Implement the collapsing floor section of the game
    - Implement relics collectibles
    - Implement relics collection score box 
    - Implement relics count data persistense
    - Refine restart in pause menu
    - Implement collect sound
    - Implement scene fade in effect
  - Files: 
    - Scripts/Collectables/CollectableController.cs
    - Scripts/Collectables/RelicManager.cs
    - Scripts/Collectables/RelicsCountManager.cs
    - Scripts/PlayerStat.cs
    - Scripts/PlayerController.cs
    - Prefabs/FallingPlatform.prefab
    - Prefabs/FixedPlatform.prefab
    - Sounds/collect.wav
    - Prefabs/Gem
    - Scenes/LevelOneScene.unity
    - Animations/Fade_In.anim
    - AnimatorControllers/Fade_In.controller\

- Lawrence Yim
  - Contributions summary:
    - Implement respawn and reset mechanisms and refine associated data persistence
    - Implement the win/lose and pause menus
    - Implement the health tracking system and displays
  - Files:
    - Collectables/Gem/Prefabs/JumpRelic.prefab
    - Collectables/Gem/Prefabs/RunRelics.prefab
    - Prefabs/Wall.prefab
    - Prefabs/Stairs.prefab
    - Scenes/LevelOneBossScene
    - Scenes/LevelOneScene
    - Scripts/Collectables/RelicManager.cs
    - Scripts/HealthUI.cs
    - Scripts/LoseMenu.cs
    - Scripts/PlayerHealth.cs
    - Scripts/ResetEvent.cs
    - Scripts/RespawnPlayer.cs
